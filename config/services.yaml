# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    webroot: '%kernel.project_dir%/public'

    strichliste:

        # See http://de.php.net/manual/en/datetime.formats.relative.php
        staleUserPeriod: '10 day'

        i18n:
            dateFormat: 'YYYY-MM-DD HH:mm:ss'
            timezone: 'auto'
            language: 'en'
            currency:
                name: 'Euro'
                symbol: 'â‚¬'
                alpha3: 'EUR'

        account:
            boundary:
                upper: 20000
                lower: -20000

        # Be aware: All amounts are in cents!
        payment:
            undo:
                enabled: true
                delete: false
                timeout: '5 minute' # See http://de.php.net/manual/en/datetime.formats.relative.php

            boundary:
                upper: 15000
                lower: -2000

            transactions:
                enabled: true

            deposit:
                enabled: true
                custom: true
                steps:
                    - 50
                    - 100
                    - 200
                    - 500
                    - 1000

            dispense:
                enabled: true
                custom: true
                steps:
                    - 50
                    - 100
                    - 200
                    - 500
                    - 1000

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\EventListener\ApiExceptionListener:
        tags:
        - { name: kernel.event_listener, event: kernel.exception }
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
